linux

Shell is command-line interpreter- it takes the command you type and passes them to the kernel for execution.
bash is type of shell- Its specific implementation of shell.


-------------------------------------------------------------------------------------------------------------------------
du -sh -- disk usage 
du -sh /home/user 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
find /  - search from root directory
find .  - search from current directory.

find- command is used for searching files and directories based on name, size, type, permission, modification time etc
      find /home -type d  --> find all directories under /home.
      find /home -type f  --> find all regular files 
      find / -type f -size +100M  --> find files larger than +100M.
      find /var/log -type f -mtime -7 --> find files modified in last 7 days.
      find / -type f -perm 777  -->  find files with 777 permissions.

find all .log files inside /var/log and its subdirectories.-- find /var/log -name "*log"
find file by name  --> find /home -name "config.yaml"
    case sensitive --> find /home -iname "config.yaml"
find all configuration files in /etc --> find /etc -type f -name "*.conf"
find file greater than 100MB --->  find /var/log -size +100M
find files larger than 500 Mb in /tmp and delete --> find /tmp -type f -name "*.log" -size +500M -exec rm -i {} \;




  



locate -  used to quickly search for files by name. faster than find bcz it doesnt search filesystem in real time.
      locate filename.txt  --> finds all paths that contain filename.txt
      locate -i report.pdf  --> finds report.pdf, REPORT.PDF, or Report.Pdf.
      locate -n 10 nginx.conf --> shows only first 10 matches.

---------------------------------------------------------------------------------------------------

**very important command**

grep -->  global regular expression print.
          grep <pattern> filename

      grep failed transaction.log -> This command will find all the word in files that 
                                    that matches word failed.
      grep -i "error" /var/log/syslog -> find error,Error,ERROR(ignore cap & small)
      grep -R "Connection Refused" /etc -> seaches for string in all files under /etc
      grep -n "timeout" nginx.conf -> shows the line number where "timeout" appears in nginx.conf
      grep -c "failed" /var/log/auth.log ->tells how many times failed occured.
      grep -o 'ERROR.* log.txt -> Returns only the part starting with ERROR, not full line
      grep -v "DEBUG" app.log -> shows all lines expect those containing DEBUG



cut - cut command is used to extract specific column of fields
      from a text file or input.
      host1 192.168.1.10 ubuntu
      host2 192.168.1.11 centos
      host3 192.168.1.12 ubuntu
      host4 192.168.1.13 debian
      host5 192.168.1.14 centos

      cut -d ' ' -f1 servers.txt -> used to extract first column
      cut -d ' ' -f2 servers.txt -> used to extract second column.
      cut -d ' ' -f1,2 servers.txt -> extract multiple column


**sed** - stream editor.
      sed support insertion, substitution,deletion,and filtering
       without opening an editor or writting full script.
       sed 's/Devops Enginner/SRE/' devops_notes.txt -> Replace Devops engineer with SRE
       sed 'QA/d' devops_notes.txt -> Delete all lines containing QA
       sed '/^$/d' devops_notes.txt -> Delete empty lines.


AWK - Powerful text-processing tool.
    useful for structured data eg logs, svcs,tabular output.
    we used it filtering, transforming, summarizing, extracting
    specific fields from large files.

    awk -F, '{print$1,$2,$3}' employee_data.csv -print first,second,third
                            field from each line.
    

sort 
    -- used to sort lines of text files.
    -- sort [ptions] filename
       sort file.txt -> sorts lines in ascending order(A->Z)
       sort -r file.txt -> sort in reverse order(Z-->A)
       sort -n file.txt -> sort numerically.


CURL -
curl command used in automation for GET ,post,delete, put,  the data.
curl -X GET <url> - used to check API status. 
curl -x POST <url> - used to trigger deployments. send data to CICD tools.
curl -x PUT <url> - update configuration in automation scripts.
curl -x DELETE <url> - remove resources automatically in scripts.

 WGET - WGET is used to download files from HTTP/HTTPS/FTP.
        wget https://example.com/app.tar.gz

gpg - GNU privacy guard - this command used to encrypt, decrypt, sign and verify files.used for 
                          secure communication.
       gpg -c --> symmetric encryption - encrypt file using passphrase for personal file protection.
       gpg -e --> assymetic encryption - encrypt file using reciepient public key- reciepient decrypt it
                                          using their private key.


------------------------------------------------------------------------------------------------------------------------------------------------------------

***TOP 10 linux directories***
/etc/passwd  -- Stores user account details (username, UID, GID, homeDir, shell)
/etc/shadow  -- stores encrypted user passwords (root-readable only)
          cat /etc/passwd |  grep jenkins
          sudo passwd jenkins
/etc/sudoers -- Which user can execute command as root
                     To assign jenkins users limited root access. allowing them to restart service or deploy code without full admin privileges.
                     jenkins ALL(ALL) NOPASSWD: /bin/systemctl restart jenkins

/etc/hosts  --  static hostname 
/etc/resolve.conf -- define DNS nameservers for name resolution.
/etc/fstab        --  filesystem and mount points.
                      used /etc/fstab while attaching EBS volumes to ec2 servers.
/var/log/  -- stores all system log -auth, kernel, application logs.
/etc/network/interfaces -->   used for network configuration(ip, gateway,DNS)
/etc/netplan/*.yaml     --> Ussed to configure static IPs for private EC2 servers and update network setting during VPN /VPC setting.
~/.bashrc & ~/.bash_profile  --> used for setting up shell environment variable , alises and PATH
                              I have added custom env variables and PATH exports in .bashrc for tools like kubectl ,helm and terraform to make them globally                                    available for the jenkins or EC2 server. 
/etc/crontab      --> define scheduled tasks. 
/var/www/         -->  web server files  -when deploying frontend builds manually or testing reverse proxy setup, i placed application builds in /var/www/html
/etc/systemd/system  --> manage services with systemd.
                   -- I wrote systemd unit to automatically start the docker daemon and jenkins service on ec2 reboot.
















        



