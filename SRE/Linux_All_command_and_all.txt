linux

Shell is command-line interpreter- it takes the command you type and passes them to the kernel for execution.
bash is type of shell- Its specific implementation of shell.


-------------------------------------------------------------------------------------------------------------------------
du -sh -- disk usage 
du -sh /home/user 
-----------------------------------------------------------------------------------------------------------------------------------------------------------------
find /  - search from root directory
find .  - search from current directory.

find- command is used for searching files and directories based on name, size, type, permission, modification time etc
      find /home -type d  --> find all directories under /home.
      find /home -type f  --> find all regular files 
      find / -type f -size +100M  --> find files larger than +100M.
      find /var/log -type f -mtime -7 --> find files modified in last 7 days.
      find / -type f -perm 777  -->  find files with 777 permissions.

find all .log files inside /var/log and its subdirectories.-- find /var/log -name "*log"
find file by name  --> find /home -name "config.yaml"
    case sensitive --> find /home -iname "config.yaml"
find all configuration files in /etc --> find /etc -type f -name "*.conf"
find file greater than 100MB --->  find /var/log -size +100M
find files larger than 500 Mb in /tmp and delete --> find /tmp -type f -name "*.log" -size +500M -exec rm -i {} \;




  



locate -  used to quickly search for files by name. faster than find bcz it doesnt search filesystem in real time.
      locate filename.txt  --> finds all paths that contain filename.txt
      locate -i report.pdf  --> finds report.pdf, REPORT.PDF, or Report.Pdf.
      locate -n 10 nginx.conf --> shows only first 10 matches.

---------------------------------------------------------------------------------------------------

**very important command**

grep -->  global regular expression print.
          grep <pattern> filename

      grep failed transaction.log -> This command will find all the word in files that 
                                    that matches word failed.
      grep -i "error" /var/log/syslog -> find error,Error,ERROR(ignore cap & small)
      grep -R "Connection Refused" /etc -> seaches for string in all files under /etc
      grep -n "timeout" nginx.conf -> shows the line number where "timeout" appears in nginx.conf
      grep -c "failed" /var/log/auth.log ->tells how many times failed occured.
      grep -o 'ERROR.* log.txt -> Returns only the part starting with ERROR, not full line
      grep -v "DEBUG" app.log -> shows all lines expect those containing DEBUG



cut - cut command is used to extract specific column of fields
      from a text file or input.
      host1 192.168.1.10 ubuntu
      host2 192.168.1.11 centos
      host3 192.168.1.12 ubuntu
      host4 192.168.1.13 debian
      host5 192.168.1.14 centos

      cut -d ' ' -f1 servers.txt -> used to extract first column
      cut -d ' ' -f2 servers.txt -> used to extract second column.
      cut -d ' ' -f1,2 servers.txt -> extract multiple column


**sed** - stream editor.
      sed support insertion, substitution,deletion,and filtering
       without opening an editor or writting full script.
       sed 's/Devops Enginner/SRE/' devops_notes.txt -> Replace Devops engineer with SRE
       sed 'QA/d' devops_notes.txt -> Delete all lines containing QA
       sed '/^$/d' devops_notes.txt -> Delete empty lines.


AWK - Powerful text-processing tool.
    useful for structured data eg logs, svcs,tabular output.
    we used it filtering, transforming, summarizing, extracting
    specific fields from large files.

    awk -F, '{print$1,$2,$3}' employee_data.csv -print first,second,third
                            field from each line.
    

sort 
    -- used to sort lines of text files.
    -- sort [ptions] filename
       sort file.txt -> sorts lines in ascending order(A->Z)
       sort -r file.txt -> sort in reverse order(Z-->A)
       sort -n file.txt -> sort numerically.


CURL -
curl command used in automation for GET ,post,delete, put,  the data.
curl -X GET <url> - used to check API status. 
curl -x POST <url> - used to trigger deployments. send data to CICD tools.
curl -x PUT <url> - update configuration in automation scripts.
curl -x DELETE <url> - remove resources automatically in scripts.

 WGET - WGET is used to download files from HTTP/HTTPS/FTP.
        wget https://example.com/app.tar.gz

gpg - GNU privacy guard - this command used to encrypt, decrypt, sign and verify files.used for 
                          secure communication.
       gpg -c --> symmetric encryption - encrypt file using passphrase for personal file protection.
       gpg -e --> assymetic encryption - encrypt file using reciepient public key- reciepient decrypt it
                                          using their private key.


------------------------------------------------------------------------------------------------------------------------------------------------------------

***TOP 10 linux directories***
/etc/passwd  -- Stores user account details (username, UID, GID, homeDir, shell)
/etc/shadow  -- stores encrypted user passwords (root-readable only)
          cat /etc/passwd |  grep jenkins
          sudo passwd jenkins
/etc/sudoers -- Which user can execute command as root
                     To assign jenkins users limited root access. allowing them to restart service or deploy code without full admin privileges.
                     jenkins ALL(ALL) NOPASSWD: /bin/systemctl restart jenkins

/etc/hosts  --  static hostname 
/etc/resolve.conf -- define DNS nameservers for name resolution.
/etc/fstab        --  filesystem and mount points.
                      used /etc/fstab while attaching EBS volumes to ec2 servers.
/var/log/  -- stores all system log -auth, kernel, application logs.
/etc/network/interfaces -->   used for network configuration(ip, gateway,DNS)
/etc/netplan/*.yaml     --> Ussed to configure static IPs for private EC2 servers and update network setting during VPN /VPC setting.
~/.bashrc & ~/.bash_profile  --> used for setting up shell environment variable , alises and PATH
                              I have added custom env variables and PATH exports in .bashrc for tools like kubectl ,helm and terraform to make them globally                                    available for the jenkins or EC2 server. 
/etc/crontab      --> define scheduled tasks. 
/var/www/         -->  web server files  -when deploying frontend builds manually or testing reverse proxy setup, i placed application builds in /var/www/html
/etc/systemd/system  --> manage services with systemd.
                   -- I wrote systemd unit to automatically start the docker daemon and jenkins service on ec2 reboot.


-------------------------------------------------------------------------------------------------------------------------------------------------------------------


How do you check which user last modified a file?
How do you check if a file is being actively written to?
How do you recover deleted files from running process?
How do you set limits on user CPU usage?
How do you change file permmission for all .sh files in a directory.
How do you setup swap file to increase memory?
How do you check and repair a corrupted filesystem?
How do you list all environment variables?
How do you change  default shell for a user?
How do you find all processes owned by specific user?
How do you find the location of command binary?
How do you increse the maximum number of open files? 
How do you display only directories in the current location?
how do you check failed ssh login attempts
How do you remove all containing a specific word from a file?
How do you extract only email addresses from a file?
How do you find all symbolic link in directory?
How do you find files modifed in the last 24 hours?


Q) How do you test network latency between two servers?
       I will first use ping command to check basic latency test.
       ping <destination-ip>

      PING 10.0.1.15 (10.0.1.15): 56 data bytes
64 bytes from 10.0.1.15: icmp_seq=0 ttl=64 time=0.812 ms
64 bytes from 10.0.1.15: icmp_seq=1 ttl=64 time=0.701 ms
64 bytes from 10.0.1.15: icmp_seq=2 ttl=64 time=0.736 ms

--- 10.0.1.15 ping statistics ---
3 packets transmitted, 3 received, 0% packet loss, time 2002ms
rtt min/avg/max/mdev = 0.701/0.749/0.812/0.030 ms
  here time 0.812 ms .-> round trip time (latency) between two servers.
  packet loss -> helps identify network reliability.
  Average latency shows how fast two servers can communicate.
so ping is used to check Quick connectivity and latency check.
     I use ping to test connectivity and measure round-trip latency between two servers.
The time value in milliseconds indicates network latency.”

2) traceroute
   traceroute google.com
       1  10.0.1.1 (10.0.1.1)  0.58 ms  0.51 ms  0.44 ms
       2  10.0.2.1 (10.0.2.1)  1.10 ms  1.05 ms  1.02 ms
       3  52.95.110.34 (52.95.110.34)  3.42 ms  3.55 ms  3.60 ms

  Shows each hop between source and destination.
Displays latency for each hop → useful for identifying where slowness occurs.
✅ Best for: Detecting which network segment introduces delay.
if latency is high i use traceroute to identify which hop or network path is causing the delay.

3) mtr - ( Real time traceroute + ping combo)
     mtr <destination>
                                         My traceroute  [v0.93]
Host                     Loss%   Snt   Last   Avg  Best  Wrst StDev
1. 10.0.1.1               0.0%   10    0.5   0.4   0.3   0.6   0.1
2. 10.0.2.1               0.0%   10    1.1   1.0   0.9   1.3   0.1
3. 52.95.110.34           0.0%   10    3.5   3.6   3.4   3.8   0.1

mtr command shows packet loss and average latency per hop. this command is very useful for continous monitoring.















Q) how do you display all list of users currently loged in?
   who command is used to display all users currently logged into the system.
     it shows username, terminal, login time, ip address or hostname.
    ubuntu@ip-172-31-44-69:~$ who
ubuntu   pts/0        2025-10-22 04:36 (49.36.57.61)
ubuntu   pts/1        2025-10-22 05:31 (49.36.57.61)
  49.36.57.61 - IP address of the remote machine.


How do you compress folder using tar and gzip?



Q) how do you rename all .txt files in a directory by adding _backup?

  for file in *.txt;do echo mv "$file" "${file%.txt}_backup.txt"; done  --DRY RUN
  for file in *.txt;do mv "$file" "${file%.txt}_backup.txt"; done

we will use for loop in the current directory for all files that match the pattern.
here ${file%.txt} - removes the .txt suffix from variable. (% operator removes the shortest matching pattern)
_backup.txt  -- appended to the result.


Q)  How do you enable firewall and allow only ssh and HTTP traffic?
    To secure on premise server we enable the firewall and explicitly allow only required services like SSH(22) , HTTP(80)
    sudo ufw enable
    sudo ufw allow ssh
    sudo ufw allow http
    sudo ufw deny all
This ensures that the only ports 22 ans 80 are open, and all other inbound traffic is blocked.

Q) How do you forcefully  terminate all processes of a user?
  -->  sudo pkill -u <username>   ---. sends SIGTERM by default allowing graceful shutdown
          kill processes by name , owner, terminal.
           -u devuser - target all the processes owned by the user.

      sudo pkill -9 -u devuser - -9 = SIGKILL which forcefully terminates all processes immediately.
            

Q) How do you securely delete a file beyond recovery?
--> when you delete any file with rm -f file.txt, the file is only unlinked from the filesystem, but its contents still exists on disk blocks until overwritten
    by new data. that means someone will receover it.
    Delete beyond recovery
     To securely delete we must overwrite the file contents before deleting it.
      shred -u -z -n 5 secret.txt
      -u -  remove the file after overwriting.
      -z -  add final overwrite with zeroes 
      -n 5 - overwrite 5 times
        after that data cannot be recovered with normal forensic tools.




















        



